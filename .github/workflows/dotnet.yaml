name: dotnet Build & Deploy in web App

on:
  push:
    branches:
      - none
    paths:
      - 'calculator/**'  ### Trigger build on changes to the calculator folder
  workflow_dispatch:
    inputs:
      appname:
        description: 'The Azure Web App name for deployment'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.upload-artifact.outputs.artifact-path }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'

      - name: Restore dependencies
        run: |
          dotnet restore calculator/*.csproj

      - name: Build the .NET project
        run: |
          dotnet build calculator/*.csproj --configuration Release

      - name: Run unit tests
        run: |
          dotnet test calculator/*.csproj --configuration Release
          
      - name: Prepare SonarQube Analysis
        run: |
          echo "Simulating SonarQube Preparation..."
          sleep 10  # Simulate preparation for SonarQube analysis

      - name: Run SonarQube Analysis
        run: |
          echo "Simulating SonarQube Analysis..."
          sleep 10  # Simulate SonarQube analysis

      - name: Publish the .NET project directly to wwwroot
        run: |
          dotnet publish calculator/*.csproj --configuration Release --output ./wwwroot  # Publish directly to wwwroot

      - name: Create Artifact for Deployment
        run: |
          cd wwwroot && zip -r -X ../drop.zip .  # Zip contents of wwwroot without including the wwwroot folder itself

      - name: Upload Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: drop.zip
          path: drop.zip

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}  # This ensures it always runs after the build job.
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Check secret value
        run: echo "My secret is ${{ secrets.AZURE_CREDENTIALS }}"
      
      # - name: Setup Azure Login using Service Principal
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Setup Azure Login using Service Principal
        run: |
          # Login to Azure using service principal
          az login --service-principal \
            -u a2d89136-b086-4755-9f98-af856c2d8c30 \
            -p QEt8Q~el5WQ8JWv56IsRMvM5mSJeMHsflwyEJbQ7 \
            --tenant 13085c86-4bcb-460a-a6f0-b373421c6323

          
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: drop.zip
          path: ./  # This will download the artifact to the current directory

      - name: Deploy to Dev Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.appname || secrets.AZURE_WEBAPP_NAME_DEV }}  # Use manual input or fall back to secret
          package: ./drop.zip  # Correct path to the downloaded zip file

      - name: Validate Dev Deployment
        id: validate-dev
        run: |
          curl -s --head --request GET https://${{ github.event.inputs.appname || secrets.AZURE_WEBAPP_NAME_DEV }}.azurewebsites.net/ || exit 1

      - name: Rollback to Previous Version (if deployment fails)
        if: ${{ failure() }}
        run: |
          echo "Deployment failed. Rolling back to the previous version."
          # Slot-based rollback: Swap back to the previous version by swapping slots (staging -> production)
          az webapp deployment slot swap \
            --name ${{ github.event.inputs.appname || secrets.AZURE_WEBAPP_NAME_DEV }} \
            --slot staging --target-slot production
          echo "Rollback completed."

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    if: ${{ success() }}
    environment:
      name: staging
      #url: https://staging.com  # Optional: URL to the staging environment for notification

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Request Approval to Deploy to Staging
        uses: github-actions/approval-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: 'staging'
          approvers: 'staging-team'  # Replace with the team or individuals who should approve

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: drop.zip
          path: ./  # This will download the artifact to the current directory

      - name: Deploy to Staging Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_STAGING_WEBAPP_NAME }}  # Use manual input or fall back to secret
          package: ./drop.zip  # Correct path to the downloaded zip file

      - name: Validate Staging Deployment
        id: validate-staging
        run: |
          curl -s --head --request GET https://${{ secrets.AZURE_STAGING_WEBAPP_NAME }}.azurewebsites.net/ || exit 1

      - name: Rollback to Previous Version (if deployment fails)
        if: ${{ failure() }}
        run: |
          echo "Deployment failed. Rolling back to the previous version."
          # Slot-based rollback: Swap back to the previous version by swapping slots (staging -> production)
          az webapp deployment slot swap \
            --name ${{ secrets.AZURE_STAGING_WEBAPP_NAME }} \
            --slot staging --target-slot production
          echo "Rollback completed."

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: deploy-to-staging
    if: ${{ success() }}
    environment:
      name: production
      #url: https://production.com  # Optional: URL to the production environment for notification

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Request Approval to Deploy to Production
        uses: github-actions/approval-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: 'production'
          approvers: 'production-team'  # Replace with the team or individuals who should approve

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: drop.zip
          path: ./  # This will download the artifact to the current directory

      - name: Deploy to Production Web App
        uses: azure/webapps-deploy@v2
        with:
          appname: ${{ secrets.AZURE_PRODUCTION_WEBAPP_NAME }}  # Use manual input or fall back to secret
          package: ./drop.zip  # Correct path to the downloaded zip file

      - name: Validate Production Deployment
        id: validate-prod
        run: |
          curl -s --head --request GET https://${{ secrets.AZURE_PRODUCTION_WEBAPP_NAME }}.azurewebsites.net/ || exit 1

      - name: Rollback to Previous Version (if deployment fails)
        if: ${{ failure() }}
        run: |
          echo "Deployment failed. Rolling back to the previous version."
          # Slot-based rollback: Swap back to the previous version by swapping slots (staging -> production)
          az webapp deployment slot swap \
            --name ${{ secrets.AZURE_PRODUCTION_WEBAPP_NAME }} \
            --slot staging --target-slot production
          echo "Rollback completed."
